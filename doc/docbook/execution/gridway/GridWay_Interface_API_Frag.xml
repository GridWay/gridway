<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd"
[

<!ENTITY % myents SYSTEM "../../entities">

%myents;

]>
<section>
<section><title>DRMAA bindings for C and Java</title>
<para>
The following links reference the API for the C and Java bindings of GridWay's implementation of DRMAA:
</para>
<itemizedlist>
	<listitem><para><ulink url="http://www.gridway.org/documentation/stable/drmaa_c/">DRMAA C reference</ulink></para></listitem>
	<listitem><para><ulink url="http://www.gridway.org/documentation/stable/drmaa_java/">DRMAA JAVA reference</ulink></para></listitem>
</itemizedlist>
</section>
 <section><title>DRMAA bindings for scripting languages.</title>
	
		<para>
			Most functions in DRMAA C library use reference parameters to get results when calling them. Using scripting languages makes this way of getting information unfeasible. For example python strings are immutable so it is not possible to fill an empty string with the information needed from the extension. The way the functions are called are the same as Perl and Python SGE DRMAA bindings, reference variables are omitted and what functions return is an array of result code, reference variables and error string. For example in C this call:
		</para>

		<screen>
	result=drmaa_version(&amp;major,&amp;minor,error,DRMAA_ERROR_STRING_BUFFER-1);</screen>

		<para>
			is translated to ruby as:
		</para>

		<screen>
	(result, major, minor, error)=drmaa_version</screen>

		<table>
			<title>Translation from C to Scripting language</title>
			<tgroup cols='2'>

			<thead>
			<row>
				<entry>C</entry>
				<entry>Scripting Language</entry>
			</row>
			</thead>

			<tbody>

			<row>
				<entry>result=drmaa_get_next_attr_name(values, &amp;value, value_len)</entry>
				<entry>(result, value)=drmaa_get_next_attr_name(values)</entry>
			</row>
			<row>
				<entry>result=drmaa_get_next_attr_value(values, &amp;value, value_len)</entry>
				<entry>(result, value)=drmaa_get_next_attr_value(values)</entry>
			</row>
			<row>
				<entry>result=drmaa_get_next_job_id(values, &amp;value, value_len)</entry>
				<entry>(result, value)=drmaa_get_next_job_id(values)</entry>
			</row>
			<row>
				<entry>result=drmaa_get_num_attr_names(values, &amp;size)</entry>
				<entry>(result, size)=drmaa_get_num_attr_names(values)</entry>
			</row>
			<row>
				<entry>result=drmaa_get_num_attr_values(values, &amp;size)</entry>
				<entry>(result, size)=drmaa_get_num_attr_values(values)</entry>
			</row>
			<row>
				<entry>result=drmaa_get_num_job_ids(values, &amp;size)</entry>
				<entry>(result, size)=drmaa_get_num_job_ids(values)</entry>
			</row>
			<row>
				<entry>drmaa_release_attr_names(values)</entry>
				<entry>drmaa_release_attr_names(values)</entry>
			</row>
			<row>
				<entry>drmaa_release_attr_values(values)</entry>
				<entry>drmaa_release_attr_values(values)</entry>
			</row>
			<row>
				<entry>drmaa_release_job_ids(values)</entry>
				<entry>drmaa_release_job_ids(values)</entry>
			</row>
			<row>
				<entry>result=drmaa_init(contact, error, error_len)</entry>
				<entry>(result, error)=drmaa_init(nil)</entry>
			</row>
			<row>
				<entry>result=drmaa_exit(error, error_len)</entry>
				<entry>(result, error)=drmaa_exit()</entry>
			</row>
			<row>
				<entry>result=drmaa_allocate_job_template(&amp;jt, error, error_len)</entry>
				<entry>(result, jt, error)=drmaa_allocate_job_template()</entry>
			</row>
			<row>
				<entry>result=drmaa_delete_job_template(jt, error, error_len)</entry>
				<entry>(result, error)=drmaa_delete_job_template(jt)</entry>
			</row>
			<row>
				<entry>result=drmaa_set_attribute(jt, name, value, error, error_len)</entry>
				<entry>(result, error)=drmaa_set_attribute(jt, name, value)</entry>
			</row>
			<row>
				<entry>result=drmaa_get_attribute(jt, name, &amp;value, error, error_len)</entry>
				<entry>(result, value, error)=drmaa_get_attribute(jt, name)</entry>
			</row>
			<row>
				<entry>result=drmaa_set_vector_attribute(jt, name, value, error, error_len)</entry>
				<entry>(result, error)=drmaa_set_vector_attribute(jt, name, value)</entry>
			</row>
			<row>
				<entry>result=drmaa_get_vector_attribute(jt, name, &amp;values, error, error_len)</entry>
				<entry>(result, values, error)=drmaa_get_vector_attribute(jt, name)</entry>
			</row>
			<row>
				<entry>result=drmaa_get_attribute_names(&amp;values, error, error_len)</entry>
				<entry>(result, values, error)=drmaa_get_attribute_names()</entry>
			</row>
			<row>
				<entry>result=drmaa_get_vector_attribute_names(&amp;values, error, error_len)</entry>
				<entry>(result, values, error)=drmaa_get_vector_attribute_names()</entry>
			</row>
			<row>
				<entry>result=drmaa_run_job(job_id, job_id_len, jt, error, error_len)</entry>
				<entry>(result, job_id, error)=drmaa_run_job(jt)</entry>
			</row>
			<row>
				<entry>result=drmaa_run_bulk_jobs(&amp;jobids, jt, start, end, incr, error, error_len)</entry>
				<entry>(result, jobids, error)=drmaa_run_bulk_jobs(jt, start, end, incr)</entry>
			</row>
			<row>
				<entry>result=drmaa_control(jobid, action, error, error_len)</entry>
				<entry>(result, error)=drmaa_control(jobid, action)</entry>
			</row>
			<row>
				<entry>result=drmaa_job_ps(job_id, &amp;remote_ps, error, error_len)</entry>
				<entry>(result, remote_ps, error)=drmaa_job_ps(job_id)</entry>
			</row>
			<row>
				<entry>result=drmaa_synchronize(job_ids, timeout, dispose, error, error_len)</entry>
				<entry>(result, error)=drmaa_synchronize(job_ids, timeout, dispose)</entry>
			</row>
			<row>
				<entry>result=drmaa_wait(job_id, job_id_out, job_id_out_len, &amp;stat, timeout, &amp;rusage, error, error_len)</entry>
				<entry>(result, job_id_out, stat, rusage, error)=drmaa_wait(job_id, timeout)</entry>
			</row>
			<row>
				<entry>result=drmaa_wifexited(&amp;exited, stat, error, error_len)</entry>
				<entry>(result, exited, error)=drmaa_wifexited(stat)</entry>
			</row>
			<row>
				<entry>result=drmaa_wexitstatus(&amp;exit_status, stat, error, error_len)</entry>
				<entry>(result, exit_status, error)=drmaa_wexitstatus(stat)</entry>
			</row>
			<row>
				<entry>result=drmaa_wifsignaled(&amp;signaled, stat, error, error_len)</entry>
				<entry>(result, signaled, error)=drmaa_wifsignaled(stat)</entry>
			</row>
			<row>
				<entry>result=drmaa_wtermsig(signal, signal_len, stat, error, error_len)</entry>
				<entry>(result, signal, error)=drmaa_wtermsig(stat)</entry>
			</row>
			<row>
				<entry>result=drmaa_wcoredump(&amp;core_dumped, stat, error, error_len)</entry>
				<entry>(result, core_dumped, error)=drmaa_wcoredump(stat)</entry>
			</row>
			<row>
				<entry>result=drmaa_wifaborted(&amp;aborted, stat, error, error_len)</entry>
				<entry>(result, aborted, error)=drmaa_wifaborted(stat)</entry>
			</row>
			<row>
				<entry>error_string=drmaa_strerror(drmaa_errno)</entry>
				<entry>error_string=drmaa_strerror(drmaa_errno)</entry>
			</row>
			<row>
				<entry>result=drmaa_get_contact(contact, contact_len, error, error_len)</entry>
				<entry>(result, contact, error)=drmaa_get_contact()</entry>
			</row>
			<row>
				<entry>result=drmaa_version(&amp;major, &amp;minor, error, error_len)</entry>
				<entry>(result, major, minor, error)=drmaa_version()</entry>
			</row>
			<row>
				<entry>result=drmaa_get_DRM_system(drm_system, drm_system_len, error, error_len)</entry>
				<entry>(result, drm_system, error)=drmaa_get_DRM_system()</entry>
			</row>
			<row>
				<entry>result=drmaa_get_DRMAA_implementation(drmaa_impl, drmaa_impl_len, error, error_len)</entry>
				<entry>(result, drmaa_impl, error)=drmaa_get_DRMAA_implementation()</entry>
			</row>
			<row>
				<entry>str_status=drmaa_gw_strstatus(drmaa_state)</entry>
				<entry>str_status=drmaa_gw_strstatus(drmaa_state)</entry>
			</row>

			</tbody>
			</tgroup>
		</table>

		<para>
			<note>
				<para>
				In <emphasis role="bold">drmaa_init</emphasis> call we have to pass a <emphasis role="bold">NULL</emphasis> argument as GridWay DRMAA library requires it. Here as an example I used <emphasis role="bold">nil</emphasis> as it is the ruby object describing <emphasis role="bold">NULL</emphasis> but in perl you have to use <emphasis role="bold">undef</emphasis> and in python <emphasis role="bold">None</emphasis>.
				</para>
			</note>
		</para>
 </section>
</section>