#!/bin/bash
#
### BEGIN INIT INFO
# Provides: gwd
# Required-Start: $remote_fs $syslog
# Required-Stop: $remote_fs $syslog
# Default-Start: 2 3 
# Default-Stop: 0 1 4 5 6
# Short-Description: Start gwd daemon
# Description: GridWay Metascheduler
### END INIT INFO
#
# Copyright 2002-2012 GridWay Team, Distributed Systems Architecture
# Group, Universidad Complutense de Madrid
#

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/bin/sh
DAEMON_GWD=/usr/bin/gwd
NAME=gwd
DESC=gridway

test -x $DAEMON_GWD || exit 0

LOGDIR=/var/log/gwd.log
PIDFILE=/var/run/$NAME.pid
USERNAME=gwadmin
DODTIME=30                  # Time to wait for the server to die, in seconds
                            # If this value is set too low you might not
                            # let some servers to die gracefully and
                            # 'restart' will not work

# Include gridway-core defaults if available
if [ -f /etc/default/gridway-core ] ; then
    . /etc/default/gridway-core
fi

set -e

running_pid()
{
    # Check if a given process pid's cmdline matches a given name
    pid=$1
    name=$2
    [ -z "$pid" ] && return 1
    [ ! -d /proc/$pid ] &&  return 1
    cmd=`cat /proc/$pid/cmdline | tr "\000" "\n"|head -n 1 |cut -d : -f 1`
    # Is this the expected child?
    [ "$cmd" != "$name" ] &&  return 1
    return 0
}

running()
{
# Check if the process is running looking at /proc
# (works for all users)

    # No pidfile, probably no daemon present
    [ ! -f "$PIDFILE" ] && return 1
    # Obtain the pid and check it against the binary name
    pid=`cat $PIDFILE`
    running_pid $pid $NAME || return 1
    return 0
}

start() {
    echo -n "Starting $DESC: "
    start-stop-daemon --start --quiet --chuid $USERNAME --pidfile $PIDFILE \
        --exec $DAEMON -- -lc 'gwd -m' > /dev/null 2>&1 
    RETVAL=$?
    [ $RETVAL = 0 ] && echo `pidof $DAEMON_GWD` >$PIDFILE
    if running ; then
        echo "$NAME."
    else
        echo " ERROR."
    fi
}

stop() {
    echo -n "Stopping $DESC: "
    start-stop-daemon --stop --quiet --pidfile $PIDFILE \
        --exec $DAEMON_GWD
    RETVAL=$?
    [ $RETVAL -eq 0 ] && rm -f /usr/share/gridway/5.10.1/var/.lock
    echo "$NAME."
}

force_stop() {
# Forcefully kill the process
    [ ! -f "$PIDFILE" ] && return
    if running ; then
        kill -15 $pid
        # Is it really dead?
        [ -n "$DODTIME" ] && sleep "$DODTIME"s
        if running ; then
            kill -9 $pid
            [ -n "$DODTIME" ] && sleep "$DODTIME"s
            if running ; then
                echo "Cannot kill $LABEL (pid=$pid)!"
                exit 1
            fi
        fi
    fi
    rm -f $PIDFILE
    return 0
}

case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  force-stop)
        echo -n "Forcefully stopping $DESC: "
        force_stop
        if ! running ; then
            echo "$NAME."
        else
            echo " ERROR."
        fi
        ;;
  restart)
    echo -n "Restarting $DESC: "
	stop
        [ -n "$DODTIME" ] && sleep $DODTIME
	start
        ;;
  status)
    echo -n "$LABEL is "
    if running ;  then
        echo "running"
    else
        echo " not running."
        exit 1
    fi
    ;;
  *)
    N=/etc/init.d/$NAME
    echo "Usage: $N {start|stop|restart|status|force-stop}" >&2
    exit 1
    ;;
esac

exit 0
